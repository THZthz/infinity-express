
#extension GL_ARB_explicit_uniform_location: enable
#extension GL_ARB_explicit_attrib_location: enable
#extension GL_ARB_separate_shader_objects: enable
#extension GL_ARB_shader_image_size: enable
#extension GL_ARB_bindless_texture: enable


// check for mobile gl
#ifdef GL_ES
    precision mediump float;
    precision mediump int;
#endif

// translate fragment location declarations
#if defined(GL_ARB_explicit_attrib_location)
    #define FRAGLOCATION(x, vtype, name) layout(location = x) out vtype name
#elif __VERSION__ == 130
    #define FRAGLOCATION(x, vtype, name) out vtype name
#else
    #define FRAGLOCATION(x)
#endif

// translate attribute declarations
#if defined(GL_ARB_explicit_attrib_location)
    #define ATTRIBUTE_IN(x) layout (location = x) in
    #define ATTRIBUTE_OUT(x) layout (location = x) out
#else
    #define ATTRIBUTE_IN(x) attribute
    #define ATTRIBUTE_OUT(x) attribute
#endif

// translate in/out declarations
#if __VERSION__ > 120
    #define OUT out
    #define SMOOTH_OUT smooth out
    #define FLAT_OUT flat out
    #define IN in
    #define SMOOTH_IN smooth in
    #define FLAT_IN flat in
#else
    #define OUT varying
    #define SMOOTH_OUT smooth varying
    #define FLAT_IN flat varying
    #define IN varying
    #define SMOOTH_IN smooth varying
    #define FLAT_IN flat varying
#endif

// uniform variables indicating how many textures we have in hand
uniform int numTextures;

